["^ ","~:rename-macros",["^ "],"~:renames",["^ "],"~:use-macros",["^ "],"~:excludes",["~#set",["~$second","~$extend"]],"~:name","~$cljs-time.coerce","~:imports",["^ ","~$UtcDateTime","~$goog.date.UtcDateTime"],"~:requires",["^ ","~$cljs-time.core","^=","~$time-fmt","~$cljs-time.format","^?","^?","^:","^;"],"~:uses",["^ ","~$from-default-time-zone","^=","~$minute","^=","~$hour","^=","~$day","^=","~$date-time","^=","^5","^=","~$month","^=","~$year","^=","~$to-utc-time-zone","^=","~$milli","^="],"~:defs",["^ ","~$to-local-date",["^ ","~:protocol-inline",null,"~:meta",["^ ","~:file","/Users/paulcristian/Kitchen/LvLUp/target/cljsbuild/public/js/out/cljs_time/coerce.cljs","~:line",71,"~:column",7,"~:end-line",71,"~:end-column",20,"~:arglists",["~#list",["~$quote",["^T",[["~$obj"]]]]],"~:doc","Convert `obj` to a goog.date.Date instance"],"^7","~$cljs-time.coerce/to-local-date","~:variadic",false,"^N","target/cljsbuild/public/js/out/cljs_time/coerce.cljs","^R",20,"~:method-params",["^T",[["^V"]]],"~:protocol-impl",null,"~:arglists-meta",["^T",[null,null]],"^P",1,"^O",71,"^Q",71,"~:max-fixed-arity",1,"~:fn-var",true,"^S",["^T",["^U",["^T",[["^V"]]]]],"^W","Convert `obj` to a goog.date.Date instance"],"~$to-long",["^ ","^L",null,"^M",["^ ","^N","/Users/paulcristian/Kitchen/LvLUp/target/cljsbuild/public/js/out/cljs_time/coerce.cljs","^O",47,"^P",7,"^Q",47,"^R",14,"^S",["^T",["^U",["^T",[["^V"]]]]],"^W","Convert `obj` to the number of milliseconds after the Unix epoch."],"^7","~$cljs-time.coerce/to-long","^Y",false,"^N","target/cljsbuild/public/js/out/cljs_time/coerce.cljs","^R",14,"^Z",["^T",[["^V"]]],"^[",null,"^10",["^T",[null,null]],"^P",1,"^O",47,"^Q",47,"^11",1,"^12",true,"^S",["^T",["^U",["^T",[["^V"]]]]],"^W","Convert `obj` to the number of milliseconds after the Unix epoch."],"~$from-date",["^ ","^L",null,"^M",["^ ","^N","/Users/paulcristian/Kitchen/LvLUp/target/cljsbuild/public/js/out/cljs_time/coerce.cljs","^O",41,"^P",7,"^Q",41,"^R",16,"^S",["^T",["^U",["^T",[["~$date"]]]]],"^W","Returns a DateTime instance in the UTC time zone corresponding to the given\n  js Date object."],"^7","~$cljs-time.coerce/from-date","^Y",false,"^N","target/cljsbuild/public/js/out/cljs_time/coerce.cljs","^R",16,"^Z",["^T",[["^16"]]],"^[",null,"^10",["^T",[null,null]],"^P",1,"^O",41,"^Q",41,"^11",1,"^12",true,"^S",["^T",["^U",["^T",[["^16"]]]]],"^W","Returns a DateTime instance in the UTC time zone corresponding to the given\n  js Date object."],"~$to-local-date-time",["^ ","^L",null,"^M",["^ ","^N","/Users/paulcristian/Kitchen/LvLUp/target/cljsbuild/public/js/out/cljs_time/coerce.cljs","^O",80,"^P",7,"^Q",80,"^R",25,"^S",["^T",["^U",["^T",[["^V"]]]]],"^W","Convert `obj` to a goog.date.DateTime instance"],"^7","~$cljs-time.coerce/to-local-date-time","^Y",false,"^N","target/cljsbuild/public/js/out/cljs_time/coerce.cljs","^R",25,"^Z",["^T",[["^V"]]],"^[",null,"^10",["^T",[null,null]],"^P",1,"^O",80,"^Q",80,"^11",1,"^12",true,"^S",["^T",["^U",["^T",[["^V"]]]]],"^W","Convert `obj` to a goog.date.DateTime instance"],"~$from-string",["^ ","^L",null,"^M",["^ ","^N","/Users/paulcristian/Kitchen/LvLUp/target/cljsbuild/public/js/out/cljs_time/coerce.cljs","^O",31,"^P",7,"^Q",31,"^R",18,"^S",["^T",["^U",["^T",[["~$s"]]]]],"^W","Returns DateTime instance from string using formatters in cljs-time.format,\n  returning first which parses"],"^7","~$cljs-time.coerce/from-string","^Y",false,"^N","target/cljsbuild/public/js/out/cljs_time/coerce.cljs","^R",18,"^Z",["^T",[["~$s"]]],"^[",null,"^10",["^T",[null,null]],"^P",1,"^O",31,"^Q",31,"^11",1,"^12",true,"^S",["^T",["^U",["^T",[["~$s"]]]]],"^W","Returns DateTime instance from string using formatters in cljs-time.format,\n  returning first which parses"],"~$to-string",["^ ","^L",null,"^M",["^ ","^N","/Users/paulcristian/Kitchen/LvLUp/target/cljsbuild/public/js/out/cljs_time/coerce.cljs","^O",63,"^P",7,"^Q",63,"^R",16,"^S",["^T",["^U",["^T",[["^V"]]]]],"^W","Returns a string representation of obj in UTC time-zone\n  using \"yyyy-MM-dd'T'HH:mm:ss.SSSZZ\" date-time representation."],"^7","~$cljs-time.coerce/to-string","^Y",false,"^N","target/cljsbuild/public/js/out/cljs_time/coerce.cljs","^R",16,"^Z",["^T",[["^V"]]],"^[",null,"^10",["^T",[null,null]],"^P",1,"^O",63,"^Q",63,"^11",1,"^12",true,"^S",["^T",["^U",["^T",[["^V"]]]]],"^W","Returns a string representation of obj in UTC time-zone\n  using \"yyyy-MM-dd'T'HH:mm:ss.SSSZZ\" date-time representation."],"~$to-date",["^ ","^L",null,"^M",["^ ","^N","/Users/paulcristian/Kitchen/LvLUp/target/cljsbuild/public/js/out/cljs_time/coerce.cljs","^O",58,"^P",7,"^Q",58,"^R",14,"^S",["^T",["^U",["^T",[["^V"]]]]],"^W","Convert `obj` to a JavaScript Date instance."],"^7","~$cljs-time.coerce/to-date","^Y",false,"^N","target/cljsbuild/public/js/out/cljs_time/coerce.cljs","^R",14,"^Z",["^T",[["^V"]]],"^[",null,"^10",["^T",[null,null]],"^P",1,"^O",58,"^Q",58,"^11",1,"^12",true,"^S",["^T",["^U",["^T",[["^V"]]]]],"^W","Convert `obj` to a JavaScript Date instance."],"~$from-long",["^ ","^L",null,"^M",["^ ","^N","/Users/paulcristian/Kitchen/LvLUp/target/cljsbuild/public/js/out/cljs_time/coerce.cljs","^O",25,"^P",7,"^Q",25,"^R",16,"^S",["^T",["^U",["^T",[["~$millis"]]]]],"^W","Returns a DateTime instance in the UTC time zone corresponding to the given\n  number of milliseconds after the Unix epoch."],"^7","~$cljs-time.coerce/from-long","^Y",false,"^N","target/cljsbuild/public/js/out/cljs_time/coerce.cljs","^R",16,"^Z",["^T",[["^1A"]]],"^[",null,"^10",["^T",[null,null]],"^P",1,"^O",25,"^Q",25,"^11",1,"^12",true,"^S",["^T",["^U",["^T",[["^1A"]]]]],"^W","Returns a DateTime instance in the UTC time zone corresponding to the given\n  number of milliseconds after the Unix epoch."],"~$ICoerce",["^ ","^M",["^ ","^N","/Users/paulcristian/Kitchen/LvLUp/target/cljsbuild/public/js/out/cljs_time/coerce.cljs","^O",22,"^P",14,"^Q",22,"^R",21,"^W",null,"~:protocol-symbol",true,"~:jsdoc",["^T",["@interface"]],"~:protocol-info",["^ ","~:methods",["^ ","~$to-date-time",[["^V"]]]]],"^1D",true,"^7","~$cljs-time.coerce/ICoerce","^N","target/cljsbuild/public/js/out/cljs_time/coerce.cljs","^R",21,"^P",1,"^O",22,"^1F",["^ ","^1G",["^ ","^1H",[["^V"]]]],"~:info",null,"^Q",22,"~:impls",["^4",[null,"~$js/Date","~$goog/date.DateTime","~$number","~$goog/date.Date","~$string","~$goog/date.UtcDateTime"]],"^W",null,"^1E",["^T",["@interface"]]],"^1H",["^ ","^L",null,"^M",["^ ","^N","/Users/paulcristian/Kitchen/LvLUp/target/cljsbuild/public/js/out/cljs_time/coerce.cljs","^O",23,"^P",4,"^Q",23,"^R",16,"~:protocol","^1I","^W","Convert `obj` to a goog.date.DateTime instance.","^S",["^T",["^U",["^T",[["^V"]]]]]],"^1R","^1I","^7","~$cljs-time.coerce/to-date-time","^Y",false,"^N","target/cljsbuild/public/js/out/cljs_time/coerce.cljs","^R",16,"^Z",["^T",[["^V"]]],"^[",null,"^10",["^T",[null,null]],"^P",1,"^O",22,"^Q",23,"^11",1,"^12",true,"^S",["^T",["^U",["^T",[["^V"]]]]],"^W","Convert `obj` to a goog.date.DateTime instance."],"~$to-epoch",["^ ","^L",null,"^M",["^ ","^N","/Users/paulcristian/Kitchen/LvLUp/target/cljsbuild/public/js/out/cljs_time/coerce.cljs","^O",52,"^P",7,"^Q",52,"^R",15,"^S",["^T",["^U",["^T",[["^V"]]]]],"^W","Convert `obj` to Unix epoch."],"^7","~$cljs-time.coerce/to-epoch","^Y",false,"^N","target/cljsbuild/public/js/out/cljs_time/coerce.cljs","^R",15,"^Z",["^T",[["^V"]]],"^[",null,"^10",["^T",[null,null]],"^P",1,"^O",52,"^Q",52,"^11",1,"^12",true,"^S",["^T",["^U",["^T",[["^V"]]]]],"^W","Convert `obj` to Unix epoch."]],"~:require-macros",null,"~:cljs.analyzer/constants",["^ ","~:seen",["^4",["~:date-time","~:else"]],"~:order",["^1Z","^1Y"]],"^W","### Utilites to coerce goog.date DateTime instances to and from\n  various other types.\n\n  For example, to convert a goog.date DateTime to and from a js number:\n\n```clojure\n=> (to-long (date-time 1998 4 25))\n893462400000\n\n=> (from-long 893462400000)\n#<19980425T000000>\n```"]